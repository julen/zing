[tox]
envlist = py27-django111-{sqlite,mysql,postgres},project
basepython = python
usedevelop = True
skipsdist = True

[testenv]
sitepackages = True
whitelist_externals=
    make
    psql
    mysql
    echo
    py.test
    codecov
    zing
passenv=
    CI TRAVIS_BUILD_ID TRAVIS TRAVIS_BRANCH TRAVIS_JOB_NUMBER TRAVIS_PULL_REQUEST TRAVIS_JOB_ID TRAVIS_REPO_SLUG TRAVIS_COMMIT
setenv=
    mysql: DATABASE_BACKEND=mysql_innodb
    sqlite: DATABASE_BACKEND=sqlite
    postgres: DATABASE_BACKEND=postgres
commands=
    zing init
    make travis-assets
    py.test --cov-report=term --cov=. -v --duration=25
    codecov -e TOXENV

[testenv:project]
whitelist_externals=
    make
    npm
    psql
    mysql
    bash
    zing
    py.test
    codecov
setenv=
    DATABASE_BACKEND=sqlite
commands=
    # Setup databases
    psql -c 'create database zing;' -U postgres
    mysql -e 'create database zing CHARACTER SET utf8 COLLATE utf8_general_ci;'
    # Migrate and initdb for all DBs
    bash -c "DATABASE_BACKEND=mysql_innodb python manage.py migrate --noinput --traceback"
    bash -c "DATABASE_BACKEND=mysql_innodb python manage.py initdb --no-projects"
    bash -c "DATABASE_BACKEND=postgres python manage.py migrate --noinput --traceback"
    bash -c "DATABASE_BACKEND=postgres python manage.py initdb --no-projects"
    bash -c "DATABASE_BACKEND=sqlite python manage.py migrate --noinput --traceback"
    bash -c "DATABASE_BACKEND=sqlite python manage.py makemigrations --noinput --check"
    bash -c "DATABASE_BACKEND=sqlite python manage.py initdb --no-projects"
    # Other linting
    zing init
    make travis-assets
    python setup.py sdist
    make docs
    make test-js
    py.test --cov-report= --cov=. -v -s -k test_debug_timing --debug-tests -
    codecov -e TOXENV

[testenv:lint]
whitelist_externals=
    make
commands=
    make lint-python
    make lint-js
    make lint-css
